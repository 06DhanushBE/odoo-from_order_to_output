# Manufacturing System Environment Variables Template
# Copy this file to .env and replace the placeholder values with your actual credentials

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# PostgreSQL Database Configuration (Recommended for production)
DATABASE_URL=postgresql://username:password@localhost:5432/manufacturing_system_db

# SQLite Database Configuration (Alternative for development)
# DATABASE_URL=sqlite:///manufacturing.db

# ===========================================
# FLASK CONFIGURATION
# ===========================================

# Enable debug mode for development (set to False in production)
FLASK_DEBUG=True

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# Secret key for Flask sessions and JWT tokens (generate a strong random key)
SECRET_KEY=your-secret-key-change-in-production-use-long-random-string

# JWT Secret Key (should be different from Flask SECRET_KEY)
JWT_SECRET_KEY=your-jwt-secret-key-generate-strong-random-key

# JWT Access Token Expiration (in hours)
JWT_ACCESS_TOKEN_EXPIRES=24

# ===========================================
# CORS CONFIGURATION
# ===========================================

# Allowed origins for CORS (frontend URLs)
CORS_ORIGINS=http://localhost:5000,http://localhost:3000

# ===========================================
# EMAIL CONFIGURATION
# ===========================================

# Email settings for password reset OTP
# If not configured, OTP will be displayed in console for development

# Gmail Configuration (requires App Password)
# Generate App Password: https://myaccount.google.com/apppasswords
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-specific-password
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587

# Alternative SMTP configurations:
# For Outlook/Hotmail:
# SMTP_SERVER=smtp.live.com
# SMTP_PORT=587

# For Yahoo:
# SMTP_SERVER=smtp.mail.yahoo.com
# SMTP_PORT=587

# ===========================================
# AI CONFIGURATION
# ===========================================

# Groq API Key for AI report generation
# Get your API key from: https://console.groq.com/
# Sign up for free and create an API key
GROQ_API_KEY=gsk_your_actual_groq_api_key_here

# ===========================================
# ADDITIONAL CONFIGURATION
# ===========================================

# Optional: Set custom host and port for Flask app
# FLASK_HOST=0.0.0.0
# FLASK_PORT=8000

# Optional: Database connection pool settings
# DB_POOL_SIZE=10
# DB_MAX_OVERFLOW=20

# Optional: Logging level
# LOG_LEVEL=INFO

# ===========================================
# PRODUCTION NOTES
# ===========================================

# 1. Generate strong random keys for SECRET_KEY and JWT_SECRET_KEY
# 2. Set FLASK_DEBUG=False in production
# 3. Use a proper PostgreSQL database in production
# 4. Set up proper SMTP credentials for email functionality
# 5. Ensure this .env file is never committed to version control
# 6. Consider using environment-specific .env files (.env.production, .env.development)

# ===========================================
# QUICK SETUP COMMANDS
# ===========================================

# Generate secret keys (run in Python):
# import secrets
# print("SECRET_KEY=" + secrets.token_urlsafe(32))
# print("JWT_SECRET_KEY=" + secrets.token_urlsafe(32))

# Test database connection:
# python -c "from app import app, db; app.app_context().push(); print('Database connection:', 'OK' if db.engine.connect() else 'FAILED')"

# Test Groq API:
# python -c "from ai_service import ai_report_generator; ai_report_generator._ensure_llm_initialized(); print('Groq API: OK')"